import sys
from random import choices
from itertools import accumulate


import pygame as pg
from pygame.locals import *
pg.init()

#GLOBALS
WIDTH = 1160
HEIGHT = 893
CLOCK = pg.time.Clock()
FPS = 60
PLAYING = True


path = ((273, 274, 294, 252, 315),
(252, 253, 273, 231),
(231, 232, 252, 210),
(210, 211, 231, 189),
(189, 190, 210, 168),
(168, 169, 189, 147),
(169, 170, 190, 168, 148),
(170, 171, 191, 169, 149),
(191, 192, 212, 190, 170),
(212, 213, 233, 211, 191),
(233, 234, 254, 232, 212),
(213, 214, 234, 212, 192),
(214, 215, 235, 213, 193),
(193, 194, 214, 192, 172),
(194, 195, 215, 193, 173),
(173, 174, 194, 172, 152),
(152, 153, 173, 151, 131),
(151, 152, 172, 150, 130),
(131, 132, 152, 130, 110),
(110, 111, 131, 109, 89),
(111, 112, 132, 110, 90),
(112, 113, 133, 111, 91),
(133, 134, 154, 132, 112),
(154, 155, 175, 153, 133),
(155, 156, 176, 154, 134),
(156, 157, 177, 155, 135),
(135, 136, 156, 134, 114),
(114, 115, 135, 113, 93),
(93, 94, 114, 92, 72),
(72, 73, 93, 71, 51),
(51, 52, 72, 50, 30),
(30, 31, 51, 29, 9, 10),
(29, 30, 50, 28, 8, 7),
(52, 53, 73, 51, 31),
(53, 54, 74, 52, 32),
(32, 33, 53, 31, 11, 10, 12),
(54, 55, 75, 53, 33),
(55, 56, 76, 54, 34, 57, 77),
(34, 35, 55, 33, 13, 12, 14, 15, 16, 17, 36, 37),
(74, 75, 95, 73, 53),
(95, 96, 116, 94, 74),
(96, 97, 117, 95, 75),
(71, 72, 92, 70, 50),
(70, 71, 91, 69, 49),
(69, 70, 90, 68, 48),
(68, 69, 89, 67, 47),
(47, 48, 68, 46, 26),
(26, 27, 47, 25, 5, 6),
(27, 28, 48, 26, 6),
(5, 6, 26, 4),
(4, 5, 25, 3),
(3, 4, 24, 2),
(2, 3, 23, 1),
(23, 24, 44, 22, 2),
(22, 23, 43, 21, 1, 0),
(43, 44, 64, 42, 22),
(64, 65, 85, 63, 43),
(85, 86, 106, 84, 64),
(86, 87, 107, 85, 65),
(87, 88, 108, 86, 66),
(66, 67, 87, 65, 45),
(67, 68, 88, 66, 46),
(46, 47, 67, 45, 25),
(25, 26, 46, 24, 4),
(65, 66, 86, 64, 44),
(108, 109, 129, 107, 87),
(129, 130, 150, 128, 108),
(128, 129, 149, 127, 107),
(127, 128, 148, 126, 106),
(126, 127, 147, 105),
(301, 302, 322, 300, 280, 323, 303, 324, 325),
(300, 301, 321, 299, 279),
(299, 300, 320, 298, 278),
(298, 299, 319, 297, 277),
(297, 298, 318, 296, 276),
(296, 297, 317, 295, 275, 316),
(276, 277, 297, 275, 255),
(255, 256, 276, 254, 234),
(256, 257, 277, 255, 235),
(257, 258, 278, 256, 236),
(236, 237, 257, 235, 215),
(258, 259, 279, 257, 237),
(259, 260, 280, 258, 238),
(238, 239, 259, 237, 217),
(217, 218, 238, 216, 196),
(260, 261, 281, 259, 239),
(261, 262, 282, 260, 240),
(262, 263, 283, 261, 241),
(283, 284, 304, 282, 262),
(241, 242, 262, 240, 220),
(242, 243, 263, 241, 221),
(243, 244, 264, 242, 222),
(244, 245, 265, 243, 223),
(223, 224, 244, 222, 202),
(202, 203, 223, 201, 181),
(181, 182, 202, 180, 160),
(201, 202, 222, 200, 180),
(200, 201, 221, 199, 179),
(199, 200, 220, 198, 178),
(198, 199, 219, 197, 177),
(197, 198, 218, 196, 176),
(219, 220, 240, 218, 198),
(179, 180, 200, 178, 158),
(158, 159, 179, 157, 137),
(137, 138, 158, 136, 116),
(138, 139, 159, 137, 117),
(203, 204, 224, 202, 182),
(204, 205, 225, 203, 183),
(225, 226, 246, 224, 204, 267),
(183, 184, 204, 182, 162),
(162, 163, 183, 161, 141),
(161, 162, 182, 160, 140),
(163, 164, 184, 162, 142),
(142, 143, 163, 141, 121),
(121, 122, 142, 120, 100),
(120, 121, 141, 119, 99),
(119, 120, 140, 118, 98),
(99, 100, 120, 98, 78, 77),
(122, 123, 143, 121, 101),
(101, 102, 122, 100, 80),
(80, 81, 101, 79, 59),
(79, 80, 100, 78, 58, 57),
(59, 60, 80, 58, 38, 37),
(81, 82, 102, 80, 60),
(82, 83, 103, 81, 61),
(83, 104, 82, 62),
(61, 62, 82, 60, 40),
(40, 41, 61, 39, 19),
(39, 40, 60, 38, 18, 17),
(19, 20, 40, 18),
(41, 62, 40, 20),
(103, 104, 124, 102, 82),
(124, 125, 145, 123, 103),
(123, 124, 144, 122, 102),
(125, 146, 124, 104),
(146, 167, 145, 125),
(167, 188, 166, 146),
(166, 167, 187, 165, 145),
(165, 166, 186, 164, 144),
(188, 209, 187, 167),
(209, 230, 208, 188),
(230, 251, 229, 209),
(251, 272, 250, 230),
(250, 251, 271, 249, 229),
(229, 230, 250, 228, 208),
(228, 229, 249, 227, 207),
(207, 208, 228, 206, 186, 185),
(249, 250, 270, 248, 228),
(248, 249, 269, 247, 227),
(269, 270, 290, 268, 248),
(290, 291, 311, 289, 269),
(311, 312, 332, 310, 290),
(332, 333, 331, 311),
(331, 332, 330, 310),
(330, 331, 329, 309),
(309, 310, 330, 308, 288),
(308, 309, 329, 307, 287),
(287, 288, 308, 286, 266),
(286, 287, 307, 285, 265),
(285, 286, 306, 284, 264),
(306, 307, 327, 305, 285, 326, 328),
(291, 292, 312, 290, 270),
(292, 293, 313, 291, 271),
(293, 314, 292, 272),
(314, 335, 313, 293, 334),
(335, 334, 314))

PATH = list(accumulate(path))
STEP = 0

#setup screen and font
screen = pg.display.set_mode((WIDTH, HEIGHT))
pg.display.set_caption("Zorak's Fortress")

#load images
bg = pg.image.load("../assets/img/frame.png").convert_alpha()
tiles = []
for n in range(336):
    img = pg.image.load(f"../assets/img/tiles/{n}.png").convert_alpha()
    tiles.append(img)
off = choices(range(336), k=20)

x_off = 11
y_off = 17

while PLAYING:
    for event in pg.event.get():
        if event.type == QUIT:
            PLAYING = False
        if event.type == KEYDOWN:
            STEP = (STEP + 1)%166

    screen.blit(bg, (0, 0))

    for n in set(PATH[STEP]):
        y,x = divmod(n, 21)
        pos = (x_off + x*54, y_off + y*54)
        screen.blit(tiles[n], pos)

    y, x = divmod(path[STEP][0], 21)
    pos = (27 + x_off + x*54, 27 + y_off + y*54)
    pg.draw.circle(screen, "red", pos, 10) 

    pg.display.update()
    CLOCK.tick(FPS)

pg.quit()
sys.exit()
